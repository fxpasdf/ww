from penetration_tester import tester_generate_vulnerability_report
from code_auditor import generate_code_audit_report as generate_code_audit_report
from config_checker import get_config_checks
from performance_monitor import get_performance_checks


def generate_vulnerability_report():
    """生成系统脆弱性评估报告"""
    # 获取渗透测试报告
    penetration_report = tester_generate_vulnerability_report()

    # 获取代码审计报告
    code_audit_report = generate_code_audit_report()

    # 获取配置功能检查结果
    config_check_results = get_config_checks()

    # 获取系统性能检测结果
    performance_check_results = get_performance_checks()

    # 汇总所有结果
    report = {
        "渗透测试报告": penetration_report,
        "代码审计报告": code_audit_report,
        "配置功能检查结果": config_check_results,
        "系统性能检测结果": performance_check_results,
        "总体评估": {
            "风险等级": "中等",
            "修复建议": (
                "1. 修复高风险的命令注入和路径遍历漏洞。\n"
                "2. 移除硬编码的敏感信息，使用环境变量或安全的配置管理工具。\n"
                "3. 启用防火墙并配置规则，限制不必要的端口访问。\n"
                "4. 对用户输入进行严格验证和过滤，避免直接使用未经验证的输入。\n"
                "5. 确保文件权限操作的安全性，避免设置过于宽松的权限。"
            )
        }
    }
    return report